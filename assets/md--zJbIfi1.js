import{o as a,c as r,k as i,q as l,s as c,B as n,e,aa as t}from"./modules/vue-9M24w38T.js";import{I as u}from"./slidev/default-CI3DwVw6.js";import{u as d,f as h}from"./slidev/context-CpFYtyQh.js";import"./index-x7sAMbJ8.js";import"./modules/shiki-D165QSPi.js";const m=e("div",{class:"dense"},[e("h1",null,"Step 11: Authorization"),e("p",null,"In RESTful APIs, a common use case is to restrict access to certain endpoints unless the user has permission to access them. Likewise in GraphQL, you can restrict access to certain fields unless the user has permission to access them."),e("p",null,[t("In this step, we will carry on from Step 8 (Federation) and modify the "),e("code",null,"me"),t(" query so that it only returns the current user and their posts, and no one elseâ€™s.")]),e("ul",null,[e("li",null,[t("In the service containing the "),e("code",null,"me"),t(" query, update the schema to define a new directive")]),e("li",null,[t("Define a "),e("code",null,"role"),t(" argument for the directive that can be either "),e("code",null,"VERIFIED"),t(" or "),e("code",null,"ADMIN")]),e("li",null,[t("Annotate the "),e("code",null,"me"),t(" query with the new directive and pass in an argument of "),e("code",null,"role: VERIFIED")]),e("li",null,[t("Annotate the "),e("code",null,"author"),t(" field with the new directive and pass in an argument of "),e("code",null,"role: ADMIN")])])],-1),p={__name:"slides.md__slidev_43",setup(f){const{$slidev:_,$nav:I,$clicksContext:s,$clicks:v,$page:w,$renderContext:y,$frontmatter:o}=d();return s.setup(),($,x)=>(a(),r(u,l(c(n(h)(n(o),42))),{default:i(()=>[m]),_:1},16))}},q=p;export{q as default};
