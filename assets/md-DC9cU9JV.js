import{o as s,c as n,k as u,e,ac as t,q as i,s as c,B as a}from"./modules/vue-BBMVLcIa.js";import{I as p}from"./slidev/default-Ba87BGp8.js";import{u as d,f as h}from"./slidev/context-BOR2XNhG.js";import"./index-CgsUtCqz.js";import"./modules/shiki-BYv9gApt.js";const q={__name:"slides.md__slidev_12",setup(m){const{$slidev:f,$nav:y,$clicksContext:r,$clicks:_,$page:v,$renderContext:x,$frontmatter:l}=d();return r.setup(),(w,o)=>(s(),n(p,i(c(a(h)(a(l),11))),{default:u(()=>o[0]||(o[0]=[e("div",{class:"dense"},[e("h1",null,"Step 2: Loaders ðŸ’»"),e("p",null,"A loader is an utility to avoid the N+1 query problem of GraphQL. Each defined loader will register a resolver that coalesces each of the request and combines them into a single, bulk query."),e("p",null,"Moreover, it can also cache the results, so that other parts of the GraphQL do not have to fetch the same data."),e("ul",null,[e("li",null,[t("Create a "),e("code",null,"Person"),t(" type with "),e("code",null,"name"),t(" property")]),e("li",null,[t("Create a "),e("code",null,"Pet"),t(" type with "),e("code",null,"name"),t(" and "),e("code",null,"owner"),t(" property (of type "),e("code",null,"Person"),t(")")]),e("li",null,[t("Expose a "),e("code",null,"pets"),t(" query which returns all pets and, for each pet, its owner, using "),e("strong",null,"GraphQL loaders")])])],-1)])),_:1},16))}};export{q as default};
